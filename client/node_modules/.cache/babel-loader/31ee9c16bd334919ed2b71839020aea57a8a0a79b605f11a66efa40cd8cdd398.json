{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data: () => ({\n    categories: ['General Discussion and Helping', 'Artificial Intelligence Ethics and Law', 'Business and Technology', 'Cloud Technologies', 'Data Science and Artificial Intelligence', 'Data-Driven Applications', 'Database Management', 'DevOps and Continuous Integration/Continuous Deployment (CI/CD)', 'Education and Learning', 'Hardware and Electronics', 'Internet and Network Technologies', 'Internet of Things (IoT)', 'Programming Languages', 'Robotics and Automation', 'Security and Hacking', 'Software Development', 'Technology News and Trends', 'VR/AR and Augmented Reality (AR/VR/XR)', 'Web Development', 'Mobile Application Development'],\n    errorMessages: '',\n    title: null,\n    post: null,\n    category: null,\n    formHasErrors: false\n  }),\n  computed: {\n    form() {\n      return {\n        title: this.title,\n        post: this.post,\n        category: this.category\n      };\n    }\n  },\n  methods: {\n    titleCheck() {\n      this.errorMessages = this.title ? `Hey! I'm required...` : '';\n      return true;\n    },\n    resetForm() {\n      this.errorMessages = [];\n      this.formHasErrors = false;\n      Object.keys(this.form).forEach(f => {\n        this.$refs[f].reset();\n      });\n    },\n    async submit() {\n      const formData = {\n        title: this.title,\n        post: this.post,\n        category: this.category\n      };\n      try {\n        const response = await axios.post('http://127.0.0.1:8080/api', formData);\n        console.log('Data sent successfully.', response.data);\n        this.resetForm();\n      } catch (error) {\n        console.error('Data sending error.', error);\n        this.formHasErrors = true;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","categories","errorMessages","title","post","category","formHasErrors","computed","form","methods","titleCheck","resetForm","Object","keys","forEach","f","$refs","reset","submit","formData","response","console","log","error"],"sources":["C:\\Users\\yigit\\Playground\\opin.io\\client\\src\\views\\PostView.vue"],"sourcesContent":["<template>\n  <v-card elevation=\"0\" ref=\"form\">\n    <v-card-text>\n      <v-autocomplete\n          outlined\n          ref=\"category\"\n          v-model=\"category\"\n          :rules=\"[() => !!category || 'This field is required']\"\n          :items=\"categories\"\n          label=\"Category\"\n          placeholder=\"Select...\"\n          required\n      ></v-autocomplete>\n      <v-text-field\n          outlined\n          ref=\"title\"\n          v-model=\"title\"\n          :rules=\"[\n              () => !!title || 'This field is required',\n              () => !!title && title.length <= 25 || 'Title must be less than 25 characters',\n              titleCheck\n            ]\"\n          label=\"Title\"\n          counter=\"25\"\n          required\n      ></v-text-field>\n      <v-textarea\n          auto-grow\n          outlined\n          ref=\"post\"\n          v-model=\"post\"\n          :rules=\"[() => !!post || 'This field is required', titleCheck]\"\n          label=\"Post\"\n          required\n      ></v-textarea>\n    </v-card-text>\n    <v-card-actions>\n      <v-btn>\n        Cancel\n      </v-btn>\n      <v-spacer></v-spacer>\n      <v-slide-x-reverse-transition>\n        <v-tooltip\n            v-if=\"formHasErrors\"\n            left\n        >\n          <template v-slot:activator=\"{ on, attrs }\">\n            <v-btn\n                icon\n                class=\"my-0\"\n                v-bind=\"attrs\"\n                @click=\"resetForm\"\n                v-on=\"on\"\n            >\n              <v-icon>mdi-refresh</v-icon>\n            </v-btn>\n          </template>\n          <span>Refresh form</span>\n        </v-tooltip>\n      </v-slide-x-reverse-transition>\n      <v-btn\n          color=\"primary\"\n          @click=\"submit\"\n      >\n        Submit\n      </v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data: () => ({\n    categories: [ 'General Discussion and Helping',\n      'Artificial Intelligence Ethics and Law',\n      'Business and Technology',\n      'Cloud Technologies',\n      'Data Science and Artificial Intelligence',\n      'Data-Driven Applications',\n      'Database Management',\n      'DevOps and Continuous Integration/Continuous Deployment (CI/CD)',\n      'Education and Learning',\n      'Hardware and Electronics',\n      'Internet and Network Technologies',\n      'Internet of Things (IoT)',\n      'Programming Languages',\n      'Robotics and Automation',\n      'Security and Hacking',\n      'Software Development',\n      'Technology News and Trends',\n      'VR/AR and Augmented Reality (AR/VR/XR)',\n      'Web Development',\n      'Mobile Application Development' ],\n    errorMessages: '',\n    title: null,\n    post: null,\n    category: null,\n    formHasErrors: false,\n  }),\n\n  computed: {\n    form () {\n      return {\n        title: this.title,\n        post: this.post,\n        category: this.category,\n      }\n    },\n  },\n\n  methods: {\n    titleCheck () {\n      this.errorMessages = this.title\n          ? `Hey! I'm required...`\n          : ''\n\n      return true\n    },\n    resetForm () {\n      this.errorMessages = []\n      this.formHasErrors = false\n\n      Object.keys(this.form).forEach(f => {\n        this.$refs[f].reset()\n      })\n    },\n    async submit() {\n      const formData = {\n        title: this.title,\n        post: this.post,\n        category: this.category\n      };\n\n      try {\n        const response = await axios.post('http://127.0.0.1:8080/api', formData);\n        console.log('Data sent successfully.', response.data);\n\n        this.resetForm();\n      } catch (error) {\n        console.error('Data sending error.', error);\n        this.formHasErrors = true;\n      }\n    }\n  }\n}\n</script>"],"mappings":"AAuEA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAEA,CAAA,MAAO;IACXC,UAAU,EAAE,CAAE,gCAAgC,EAC5C,wCAAwC,EACxC,yBAAyB,EACzB,oBAAoB,EACpB,0CAA0C,EAC1C,0BAA0B,EAC1B,qBAAqB,EACrB,iEAAiE,EACjE,wBAAwB,EACxB,0BAA0B,EAC1B,mCAAmC,EACnC,0BAA0B,EAC1B,uBAAuB,EACvB,yBAAyB,EACzB,sBAAsB,EACtB,sBAAsB,EACtB,4BAA4B,EAC5B,wCAAwC,EACxC,iBAAiB,EACjB,gCAA+B,CAAG;IACpCC,aAAa,EAAE,EAAE;IACjBC,KAAK,EAAE,IAAI;IACXC,IAAI,EAAE,IAAI;IACVC,QAAQ,EAAE,IAAI;IACdC,aAAa,EAAE;EACjB,CAAC,CAAC;EAEFC,QAAQ,EAAE;IACRC,IAAGA,CAAA,EAAK;MACN,OAAO;QACLL,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,IAAI,EAAE,IAAI,CAACA,IAAI;QACfC,QAAQ,EAAE,IAAI,CAACA;MACjB;IACF;EACF,CAAC;EAEDI,OAAO,EAAE;IACPC,UAASA,CAAA,EAAK;MACZ,IAAI,CAACR,aAAY,GAAI,IAAI,CAACC,KAAI,GACvB,sBAAoB,GACrB,EAAC;MAEP,OAAO,IAAG;IACZ,CAAC;IACDQ,SAAQA,CAAA,EAAK;MACX,IAAI,CAACT,aAAY,GAAI,EAAC;MACtB,IAAI,CAACI,aAAY,GAAI,KAAI;MAEzBM,MAAM,CAACC,IAAI,CAAC,IAAI,CAACL,IAAI,CAAC,CAACM,OAAO,CAACC,CAAA,IAAK;QAClC,IAAI,CAACC,KAAK,CAACD,CAAC,CAAC,CAACE,KAAK,CAAC;MACtB,CAAC;IACH,CAAC;IACD,MAAMC,MAAMA,CAAA,EAAG;MACb,MAAMC,QAAO,GAAI;QACfhB,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,IAAI,EAAE,IAAI,CAACA,IAAI;QACfC,QAAQ,EAAE,IAAI,CAACA;MACjB,CAAC;MAED,IAAI;QACF,MAAMe,QAAO,GAAI,MAAMrB,KAAK,CAACK,IAAI,CAAC,2BAA2B,EAAEe,QAAQ,CAAC;QACxEE,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,QAAQ,CAACpB,IAAI,CAAC;QAErD,IAAI,CAACW,SAAS,CAAC,CAAC;MAClB,EAAE,OAAOY,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC3C,IAAI,CAACjB,aAAY,GAAI,IAAI;MAC3B;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}
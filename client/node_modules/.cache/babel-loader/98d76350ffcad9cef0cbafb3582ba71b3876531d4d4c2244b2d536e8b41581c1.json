{"ast":null,"code":"import { createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createElementVNode as _createElementVNode, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"text-overline mb-1\"\n};\nconst _hoisted_2 = {\n  class: \"text-h6 mb-1\"\n};\nconst _hoisted_3 = {\n  class: \"text-caption\"\n};\nconst _hoisted_4 = {\n  class: \"text-overline mb-1\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_card_item = _resolveComponent(\"v-card-item\");\n  const _component_v_spacer = _resolveComponent(\"v-spacer\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_card_actions = _resolveComponent(\"v-card-actions\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode($setup[\"PostView\"]), _createVNode(_component_v_container, null, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.posts, (post, index) => {\n      return _openBlock(), _createBlock(_component_v_col, {\n        key: index\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_card, {\n          class: \"mx-auto\",\n          \"max-width\": \"auto\",\n          variant: \"elevated\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_card_item, null, {\n            default: _withCtx(() => [_createElementVNode(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createTextVNode(\"In @\"), _createVNode(_component_v_btn, {\n              outlined: \"\",\n              rounded: \"\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(post.user_name), 1 /* TEXT */)]),\n\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */), _createTextVNode(\"'s opinion:\")]), _createElementVNode(\"div\", _hoisted_2, _toDisplayString(post.category_name), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_3, _toDisplayString(post.content), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_4, _toDisplayString($setup.formatDate(post.created_at)), 1 /* TEXT */)])]),\n\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_v_card_actions, null, {\n            default: _withCtx(() => [_createVNode(_component_v_spacer), _createVNode(_component_v_col, {\n              cols: \"auto\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_btn, {\n                density: \"default\",\n                icon: \"mdi-comment\",\n                size: \"32\",\n                color: \"light-blue lighten-5\"\n              })]),\n              _: 1 /* STABLE */\n            }), _createVNode(_component_v_col, {\n              cols: \"auto\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_btn, {\n                density: \"default\",\n                icon: \"mdi-bookmark\",\n                size: \"32\",\n                color: \"light-blue lighten-5\"\n              })]),\n              _: 1 /* STABLE */\n            })]),\n\n            _: 1 /* STABLE */\n          })]),\n\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */)]),\n\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */);\n    }), 128 /* KEYED_FRAGMENT */))]),\n\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createVNode","$setup","_component_v_container","_Fragment","_renderList","posts","post","index","_createBlock","_component_v_col","key","_component_v_card","variant","_component_v_card_item","_createElementVNode","_hoisted_1","_component_v_btn","outlined","rounded","user_name","_hoisted_2","_toDisplayString","category_name","_hoisted_3","content","_hoisted_4","formatDate","created_at","_component_v_card_actions","_component_v_spacer","cols","density","icon","size","color"],"sources":["C:\\Users\\yigit\\OneDrive\\Workspace\\opin.io\\client\\src\\views\\ContentView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <PostView></PostView>\r\n    <v-container>\r\n        <v-col v-for=\"(post, index) in posts\" :key=\"index\">\r\n          <v-card class=\"mx-auto\" max-width=\"auto\" variant=\"elevated\">\r\n            <v-card-item>\r\n              <div>\r\n                <div class=\"text-overline mb-1\">In @<v-btn outlined rounded>{{ post.user_name }}</v-btn>'s opinion:</div>\r\n                <div class=\"text-h6 mb-1\">{{ post.category_name }}</div>\r\n                <div class=\"text-caption\">{{ post.content }}</div>\r\n                <div class=\"text-overline mb-1\">{{ formatDate(post.created_at) }}</div>\r\n              </div>\r\n            </v-card-item>\r\n\r\n            <v-card-actions>\r\n              <v-spacer></v-spacer>\r\n              <v-col cols=\"auto\">\r\n                <v-btn density=\"default\" icon=\"mdi-comment\" size=\"32\" color=\"light-blue lighten-5\"></v-btn>\r\n              </v-col>\r\n              <v-col cols=\"auto\">\r\n                <v-btn density=\"default\" icon=\"mdi-bookmark\" size=\"32\" color=\"light-blue lighten-5\"></v-btn>\r\n              </v-col>\r\n            </v-card-actions>\r\n          </v-card>\r\n        </v-col>\r\n    </v-container>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport PostView from \"@/views/PostView.vue\";\r\nimport { ref, onMounted } from \"vue\";\r\nimport axios from \"axios\";\r\n\r\nconst posts = ref([]);\r\n\r\nconst fetchDataFromDatabase = async () => {\r\n  try {\r\n    const response = await axios.get(\"http://127.0.0.1:8080/post\");\r\n    posts.value = response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching data from the database:\", error);\r\n  }\r\n};\r\n\r\nconst formatDate = (dateString) => {\r\n  if (!dateString) return \"Invalid Date\";\r\n\r\n  const date = new Date(dateString);\r\n\r\n  if (isNaN(date.getTime())) return \"Invalid Date\";\r\n\r\n  const options = {\r\n    year: \"numeric\",\r\n    month: \"long\",\r\n    day: \"numeric\",\r\n    hour: \"numeric\",\r\n    minute: \"numeric\",\r\n    second: \"numeric\"\r\n  };\r\n\r\n  return date.toLocaleDateString('en-US', options);\r\n};\r\n\r\nonMounted(() => {\r\n  fetchDataFromDatabase().then(() => {\r\n    posts.value.sort((a, b) => new Date(b.created_at) - new Date(a.created_at));\r\n  });\r\n});\r\n\r\n</script>\r\n"],"mappings":";;EAQqBA,KAAK,EAAC;AAAoB;;EAC1BA,KAAK,EAAC;AAAc;;EACpBA,KAAK,EAAC;AAAc;;EACpBA,KAAK,EAAC;AAAoB;;;;;;;;;uBAV7CC,mBAAA,CA0BM,cAzBJC,YAAA,CAAqBC,MAAA,eACrBD,YAAA,CAuBcE,sBAAA;sBAtBH,MAA8B,E,kBAArCH,mBAAA,CAqBQI,SAAA,QAAAC,WAAA,CArBuBH,MAAA,CAAAI,KAAK,GAArBC,IAAI,EAAEC,KAAK;2BAA1BC,YAAA,CAqBQC,gBAAA;QArB+BC,GAAG,EAAEH;MAAK;0BAC/C,MAmBS,CAnBTP,YAAA,CAmBSW,iBAAA;UAnBDb,KAAK,EAAC,SAAS;UAAC,WAAS,EAAC,MAAM;UAACc,OAAO,EAAC;;4BAC/C,MAOc,CAPdZ,YAAA,CAOca,sBAAA;8BANZ,MAKM,CALNC,mBAAA,CAKM,cAJJA,mBAAA,CAAyG,OAAzGC,UAAyG,G,iBAAzE,MAAI,GAAAf,YAAA,CAAoDgB,gBAAA;cAA7CC,QAAQ,EAAR,EAAQ;cAACC,OAAO,EAAP;;gCAAQ,MAAoB,C,kCAAjBZ,IAAI,CAACa,SAAS,iB;;;2DAAW,aAAW,E,GACnGL,mBAAA,CAAwD,OAAxDM,UAAwD,EAAAC,gBAAA,CAA3Bf,IAAI,CAACgB,aAAa,kBAC/CR,mBAAA,CAAkD,OAAlDS,UAAkD,EAAAF,gBAAA,CAArBf,IAAI,CAACkB,OAAO,kBACzCV,mBAAA,CAAuE,OAAvEW,UAAuE,EAAAJ,gBAAA,CAApCpB,MAAA,CAAAyB,UAAU,CAACpB,IAAI,CAACqB,UAAU,kB;;;wCAIjE3B,YAAA,CAQiB4B,yBAAA;8BAPf,MAAqB,CAArB5B,YAAA,CAAqB6B,mBAAA,GACrB7B,YAAA,CAEQS,gBAAA;cAFDqB,IAAI,EAAC;YAAM;gCAChB,MAA2F,CAA3F9B,YAAA,CAA2FgB,gBAAA;gBAApFe,OAAO,EAAC,SAAS;gBAACC,IAAI,EAAC,aAAa;gBAACC,IAAI,EAAC,IAAI;gBAACC,KAAK,EAAC;;;gBAE9DlC,YAAA,CAEQS,gBAAA;cAFDqB,IAAI,EAAC;YAAM;gCAChB,MAA4F,CAA5F9B,YAAA,CAA4FgB,gBAAA;gBAArFe,OAAO,EAAC,SAAS;gBAACC,IAAI,EAAC,cAAc;gBAACC,IAAI,EAAC,IAAI;gBAACC,KAAK,EAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import PostView from \"@/views/PostView.vue\";\nimport { ref, onMounted } from \"vue\";\nimport axios from \"axios\";\nexport default {\n  __name: 'ContentView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const posts = ref([]);\n    const fetchDataFromDatabase = async () => {\n      try {\n        const response = await axios.get(\"http://127.0.0.1:8080/post\");\n        posts.value = response.data;\n      } catch (error) {\n        console.error(\"Error fetching data from the database:\", error);\n      }\n    };\n    const formatDate = dateString => {\n      const options = {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n        hour: \"numeric\",\n        minute: \"numeric\",\n        second: \"numeric\"\n      };\n      return new Date(dateString).toLocaleDateString(undefined, options);\n    };\n    onMounted(() => {\n      fetchDataFromDatabase();\n    });\n    const __returned__ = {\n      posts,\n      fetchDataFromDatabase,\n      formatDate,\n      PostView,\n      ref,\n      onMounted,\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["PostView","ref","onMounted","axios","posts","fetchDataFromDatabase","response","get","value","data","error","console","formatDate","dateString","options","year","month","day","hour","minute","second","Date","toLocaleDateString","undefined"],"sources":["C:/Users/yigit/OneDrive/Workspace/opin.io/client/src/views/ContentView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <PostView></PostView>\r\n    <v-container>\r\n      <v-row align=\"center\" justify=\"center\">\r\n        <v-col v-for=\"(post, index) in posts\" :key=\"index\">\r\n          <v-card class=\"mx-auto\" max-width=\"auto\" variant=\"elevated\">\r\n            <v-card-item>\r\n              <div>\r\n                <div class=\"text-overline mb-1\">@{{ yigitataben/*post.UserName*/ }}</div>\r\n                <div class=\"text-h6 mb-1\">{{ post.CategoryName }}</div>\r\n                <div class=\"text-caption\">{{ post.PostBody }}</div>\r\n                <!--<div class=\"text-overline mb-1\">{{ formatDate(post.CreatedAt) }}</div>-->\r\n              </div>\r\n            </v-card-item>\r\n\r\n            <v-card-actions>\r\n              <v-spacer></v-spacer>\r\n              <v-col cols=\"auto\">\r\n                <v-btn density=\"default\" icon=\"mdi-comment\" size=\"32\" color=\"light-blue lighten-5\"></v-btn>\r\n              </v-col>\r\n              <v-col cols=\"auto\">\r\n                <v-btn density=\"default\" icon=\"mdi-bookmark\" size=\"32\" color=\"light-blue lighten-5\"></v-btn>\r\n              </v-col>\r\n            </v-card-actions>\r\n          </v-card>\r\n        </v-col>\r\n      </v-row>\r\n    </v-container>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport PostView from \"@/views/PostView.vue\";\r\nimport { ref, onMounted } from \"vue\";\r\nimport axios from \"axios\";\r\n\r\nconst posts = ref([]);\r\n\r\nconst fetchDataFromDatabase = async () => {\r\n  try {\r\n    const response = await axios.get(\"http://127.0.0.1:8080/post\");\r\n    posts.value = response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching data from the database:\", error);\r\n  }\r\n};\r\n\r\nconst formatDate = (dateString) => {\r\n  const options = { year: \"numeric\", month: \"long\", day: \"numeric\", hour: \"numeric\", minute: \"numeric\", second: \"numeric\" };\r\n  return new Date(dateString).toLocaleDateString(undefined, options);\r\n};\r\n\r\nonMounted(() => {\r\n  fetchDataFromDatabase();\r\n});\r\n</script>\r\n"],"mappings":"AAiCA,OAAOA,QAAQ,MAAM,sBAAsB;AAC3C,SAASC,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,OAAOC,KAAK,MAAM,OAAO;;;;;;;IAEzB,MAAMC,KAAK,GAAGH,GAAG,CAAC,EAAE,CAAC;IAErB,MAAMI,qBAAqB,GAAG,MAAAA,CAAA,KAAY;MACxC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,4BAA4B,CAAC;QAC9DH,KAAK,CAACI,KAAK,GAAGF,QAAQ,CAACG,IAAI;MAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAChE;IACF,CAAC;IAED,MAAME,UAAU,GAAIC,UAAU,IAAK;MACjC,MAAMC,OAAO,GAAG;QAAEC,IAAI,EAAE,SAAS;QAAEC,KAAK,EAAE,MAAM;QAAEC,GAAG,EAAE,SAAS;QAAEC,IAAI,EAAE,SAAS;QAAEC,MAAM,EAAE,SAAS;QAAEC,MAAM,EAAE;MAAU,CAAC;MACzH,OAAO,IAAIC,IAAI,CAACR,UAAU,CAAC,CAACS,kBAAkB,CAACC,SAAS,EAAET,OAAO,CAAC;IACpE,CAAC;IAEDZ,SAAS,CAAC,MAAM;MACdG,qBAAqB,CAAC,CAAC;IACzB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data: () => ({\n    categories: ['General Discussion and Helping', 'Artificial Intelligence Ethics and Law', 'Business and Technology', 'Cloud Technologies', 'Data Science and Artificial Intelligence', 'Data-Driven Applications', 'Database Management', 'DevOps and Continuous Integration/Continuous Deployment (CI/CD)', 'Education and Learning', 'Hardware and Electronics', 'Internet and Network Technologies', 'Internet of Things (IoT)', 'Programming Languages', 'Robotics and Automation', 'Security and Hacking', 'Software Development', 'Technology News and Trends', 'VR/AR and Augmented Reality (AR/VR/XR)', 'Web Development', 'Mobile Application Development'],\n    errorMessages: '',\n    post: null,\n    category: null,\n    formHasErrors: false\n  }),\n  computed: {\n    form() {\n      return {\n        post: this.post,\n        category: this.category\n      };\n    }\n  },\n  methods: {\n    postCheck() {\n      this.errorMessages = this.post ? `Hey! I'm required...` : '';\n      return true;\n    },\n    resetForm() {\n      this.errorMessages = [];\n      this.formHasErrors = false;\n      Object.keys(this.form).forEach(f => {\n        this.$refs[f].reset();\n      });\n    },\n    async submit() {\n      const formData = {\n        PostBody: this.post,\n        PostCategory: this.category\n      };\n      try {\n        const response = await axios.post('http://127.0.0.1:8080/post', formData);\n        console.log('Data sent successfully.', response.data);\n        this.resetForm();\n      } catch (error) {\n        console.error('Data sending error.', error);\n        this.formHasErrors = true;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","categories","errorMessages","post","category","formHasErrors","computed","form","methods","postCheck","resetForm","Object","keys","forEach","f","$refs","reset","submit","formData","PostBody","PostCategory","response","console","log","error"],"sources":["C:\\Users\\yigit\\OneDrive\\Workspace\\opin.io\\client\\src\\views\\BookmarksView.vue"],"sourcesContent":["<template>\r\n  <v-card\r\n      max-width=\"550\"\r\n      class=\"mx-auto\"\r\n      variant=\"flat\"\r\n      rounded=\"xl\"\r\n  >\r\n    <v-sheet class=\"pa-4 text-center\">\r\n      <v-autocomplete\r\n          chips\r\n          ref=\"category\"\r\n          v-model=\"category\"\r\n          :rules=\"[() => !!category || 'This field is required!']\"\r\n          :items=\"categories\"\r\n          required\r\n          variant=\"outlined\"\r\n          rounded=\"xl\"\r\n      ></v-autocomplete>\r\n\r\n      <v-textarea\r\n          variant=\"outlined\"\r\n          auto-grow\r\n          full-width\r\n          rows=\"1\"\r\n          hide-details\r\n          rounded=\"xl\"\r\n          ref=\"post\"\r\n          v-model=\"post\"\r\n          :rules=\"[() => !!post || 'This field is required!', postCheck]\"\r\n          required\r\n      ></v-textarea>\r\n    </v-sheet>\r\n\r\n    <div class=\"d-flex justify-space-between pa-4 pb-0\">\r\n      <v-btn-toggle\r\n          variant=\"outlined\"\r\n          divided=\"true\"\r\n          rounded=\"xl\"\r\n      >\r\n      <v-btn>\r\n        <v-icon icon=\"mdi-image\"></v-icon>\r\n      </v-btn>\r\n\r\n      <v-btn>\r\n        <v-icon icon=\"mdi-gif\"></v-icon>\r\n      </v-btn>\r\n\r\n      <v-btn>\r\n        <v-icon icon=\"mdi-sticker-emoji\"></v-icon>\r\n      </v-btn>\r\n      </v-btn-toggle>\r\n\r\n      <v-btn-toggle\r\n          multiple=\"true\"\r\n          variant=\"outlined\"\r\n          divided=\"true\"\r\n          rounded=\"xl\"\r\n      >\r\n        <v-btn>\r\n          <v-icon icon=\"mdi-format-italic\"></v-icon>\r\n        </v-btn>\r\n\r\n        <v-btn>\r\n          <v-icon icon=\"mdi-format-bold\"></v-icon>\r\n        </v-btn>\r\n\r\n        <v-btn>\r\n          <v-icon icon=\"mdi-format-underline\"></v-icon>\r\n        </v-btn>\r\n      </v-btn-toggle>\r\n      <v-col cols=\"large\">\r\n        <v-btn icon=\"mdi-share\" size=\"x-large\"></v-btn>\r\n      </v-col>\r\n    </div>\r\n  </v-card>\r\n</template>\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data: () => ({\r\n    categories: [ 'General Discussion and Helping',\r\n      'Artificial Intelligence Ethics and Law',\r\n      'Business and Technology',\r\n      'Cloud Technologies',\r\n      'Data Science and Artificial Intelligence',\r\n      'Data-Driven Applications',\r\n      'Database Management',\r\n      'DevOps and Continuous Integration/Continuous Deployment (CI/CD)',\r\n      'Education and Learning',\r\n      'Hardware and Electronics',\r\n      'Internet and Network Technologies',\r\n      'Internet of Things (IoT)',\r\n      'Programming Languages',\r\n      'Robotics and Automation',\r\n      'Security and Hacking',\r\n      'Software Development',\r\n      'Technology News and Trends',\r\n      'VR/AR and Augmented Reality (AR/VR/XR)',\r\n      'Web Development',\r\n      'Mobile Application Development' ],\r\n    errorMessages: '',\r\n    post: null,\r\n    category: null,\r\n    formHasErrors: false,\r\n  }),\r\n\r\n  computed: {\r\n    form () {\r\n      return {\r\n        post: this.post,\r\n        category: this.category,\r\n      }\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    postCheck () {\r\n      this.errorMessages = this.post\r\n          ? `Hey! I'm required...`\r\n          : ''\r\n\r\n      return true\r\n    },\r\n    resetForm () {\r\n      this.errorMessages = []\r\n      this.formHasErrors = false\r\n\r\n      Object.keys(this.form).forEach(f => {\r\n        this.$refs[f].reset()\r\n      })\r\n    },\r\n    async submit() {\r\n      const formData = {\r\n        PostBody: this.post,\r\n        PostCategory: this.category\r\n      };\r\n\r\n      try {\r\n        const response = await axios.post('http://127.0.0.1:8080/post', formData);\r\n        console.log('Data sent successfully.', response.data);\r\n\r\n        this.resetForm();\r\n      } catch (error) {\r\n        console.error('Data sending error.', error);\r\n        this.formHasErrors = true;\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>"],"mappings":"AA6EA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAEA,CAAA,MAAO;IACXC,UAAU,EAAE,CAAE,gCAAgC,EAC5C,wCAAwC,EACxC,yBAAyB,EACzB,oBAAoB,EACpB,0CAA0C,EAC1C,0BAA0B,EAC1B,qBAAqB,EACrB,iEAAiE,EACjE,wBAAwB,EACxB,0BAA0B,EAC1B,mCAAmC,EACnC,0BAA0B,EAC1B,uBAAuB,EACvB,yBAAyB,EACzB,sBAAsB,EACtB,sBAAsB,EACtB,4BAA4B,EAC5B,wCAAwC,EACxC,iBAAiB,EACjB,gCAA+B,CAAG;IACpCC,aAAa,EAAE,EAAE;IACjBC,IAAI,EAAE,IAAI;IACVC,QAAQ,EAAE,IAAI;IACdC,aAAa,EAAE;EACjB,CAAC,CAAC;EAEFC,QAAQ,EAAE;IACRC,IAAGA,CAAA,EAAK;MACN,OAAO;QACLJ,IAAI,EAAE,IAAI,CAACA,IAAI;QACfC,QAAQ,EAAE,IAAI,CAACA;MACjB;IACF;EACF,CAAC;EAEDI,OAAO,EAAE;IACPC,SAAQA,CAAA,EAAK;MACX,IAAI,CAACP,aAAY,GAAI,IAAI,CAACC,IAAG,GACtB,sBAAoB,GACrB,EAAC;MAEP,OAAO,IAAG;IACZ,CAAC;IACDO,SAAQA,CAAA,EAAK;MACX,IAAI,CAACR,aAAY,GAAI,EAAC;MACtB,IAAI,CAACG,aAAY,GAAI,KAAI;MAEzBM,MAAM,CAACC,IAAI,CAAC,IAAI,CAACL,IAAI,CAAC,CAACM,OAAO,CAACC,CAAA,IAAK;QAClC,IAAI,CAACC,KAAK,CAACD,CAAC,CAAC,CAACE,KAAK,CAAC;MACtB,CAAC;IACH,CAAC;IACD,MAAMC,MAAMA,CAAA,EAAG;MACb,MAAMC,QAAO,GAAI;QACfC,QAAQ,EAAE,IAAI,CAAChB,IAAI;QACnBiB,YAAY,EAAE,IAAI,CAAChB;MACrB,CAAC;MAED,IAAI;QACF,MAAMiB,QAAO,GAAI,MAAMtB,KAAK,CAACI,IAAI,CAAC,4BAA4B,EAAEe,QAAQ,CAAC;QACzEI,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,QAAQ,CAACrB,IAAI,CAAC;QAErD,IAAI,CAACU,SAAS,CAAC,CAAC;MAClB,EAAE,OAAOc,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC3C,IAAI,CAACnB,aAAY,GAAI,IAAI;MAC3B;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}
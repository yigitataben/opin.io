{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data: () => ({\n    categories: [],\n    errorMessages: '',\n    post: null,\n    category: null,\n    formHasErrors: false\n  }),\n  created() {\n    this.fetchCategories();\n  },\n  computed: {\n    form() {\n      return {\n        post: this.post,\n        category: this.category\n      };\n    }\n  },\n  methods: {\n    postCheck() {\n      this.errorMessages = this.post ? `Hey! I'm required...` : '';\n      return true;\n    },\n    resetForm() {\n      this.errorMessages = [];\n      this.formHasErrors = false;\n      Object.keys(this.form).forEach(f => {\n        this.$refs[f].reset();\n      });\n    },\n    async share() {\n      const formData = {\n        PostBody: this.post,\n        PostCategory: this.category\n      };\n      try {\n        const response = await axios.post('http://127.0.0.1:8080/post', formData);\n        console.log('Data sent successfully.', response.data);\n        this.resetForm();\n      } catch (error) {\n        console.error('Data sending error.', error);\n        this.formHasErrors = true;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","categories","errorMessages","post","category","formHasErrors","created","fetchCategories","computed","form","methods","postCheck","resetForm","Object","keys","forEach","f","$refs","reset","share","formData","PostBody","PostCategory","response","console","log","error"],"sources":["C:\\Users\\yigit\\OneDrive\\Workspace\\opin.io\\client\\src\\views\\PostView.vue"],"sourcesContent":["<template>\r\n  <v-card\r\n      max-width=\"550\"\r\n      class=\"mx-auto\"\r\n      variant=\"flat\"\r\n      rounded=\"xl\"\r\n  >\r\n    <v-sheet class=\"pa-4 text-center\">\r\n      <v-autocomplete\r\n          chips\r\n          ref=\"category\"\r\n          v-model=\"category\"\r\n          :rules=\"[() => !!category]\"\r\n          :items=\"categories\"\r\n          required\r\n          variant=\"outlined\"\r\n          rounded=\"xl\"\r\n      ></v-autocomplete>\r\n\r\n      <v-textarea\r\n          variant=\"outlined\"\r\n          auto-grow\r\n          full-width\r\n          rows=\"1\"\r\n          hide-details\r\n          rounded=\"xl\"\r\n          ref=\"post\"\r\n          v-model=\"post\"\r\n          :rules=\"[() => !!post, postCheck]\"\r\n          required\r\n      ></v-textarea>\r\n    </v-sheet>\r\n\r\n    <div class=\"d-flex justify-space-between pa-4 pb-0\">\r\n      <v-btn-toggle\r\n          variant=\"outlined\"\r\n          divided=\"true\"\r\n          rounded=\"xl\"\r\n      >\r\n        <v-btn>\r\n          <v-icon icon=\"mdi-image\"></v-icon>\r\n        </v-btn>\r\n\r\n        <v-btn>\r\n          <v-icon icon=\"mdi-gif\"></v-icon>\r\n        </v-btn>\r\n\r\n        <v-btn>\r\n          <v-icon icon=\"mdi-sticker-emoji\"></v-icon>\r\n        </v-btn>\r\n      </v-btn-toggle>\r\n\r\n      <v-btn-toggle\r\n          multiple=\"true\"\r\n          variant=\"outlined\"\r\n          divided=\"true\"\r\n          rounded=\"xl\"\r\n          justify=\"center\"\r\n      >\r\n        <v-btn>\r\n          <v-icon icon=\"mdi-format-italic\"></v-icon>\r\n        </v-btn>\r\n\r\n        <v-btn>\r\n          <v-icon icon=\"mdi-format-bold\"></v-icon>\r\n        </v-btn>\r\n\r\n        <v-btn>\r\n          <v-icon icon=\"mdi-format-underline\"></v-icon>\r\n        </v-btn>\r\n      </v-btn-toggle>\r\n\r\n      <v-btn-toggle\r\n          variant=\"outlined\"\r\n          rounded=\"xl\"\r\n          justify=\"center\"\r\n          color=\"success\"\r\n          @click=\"share\"\r\n      >\r\n        <v-btn>\r\n          <v-icon icon=\"mdi-share\"></v-icon>\r\n        </v-btn>\r\n      </v-btn-toggle>\r\n    </div>\r\n  </v-card>\r\n</template>\r\n<script>\r\n\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data: () => ({\r\n    categories: [],\r\n    errorMessages: '',\r\n    post: null,\r\n    category: null,\r\n    formHasErrors: false,\r\n  }),\r\n  created() {\r\n    this.fetchCategories();\r\n  },\r\n  computed: {\r\n    form () {\r\n      return {\r\n        post: this.post,\r\n        category: this.category,\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    postCheck () {\r\n      this.errorMessages = this.post\r\n          ? `Hey! I'm required...`\r\n          : ''\r\n\r\n      return true\r\n    },\r\n    resetForm () {\r\n      this.errorMessages = []\r\n      this.formHasErrors = false\r\n\r\n      Object.keys(this.form).forEach(f => {\r\n        this.$refs[f].reset()\r\n      })\r\n    },\r\n    async share() {\r\n      const formData = {\r\n        PostBody: this.post,\r\n        PostCategory: this.category\r\n      };\r\n\r\n      try {\r\n        const response = await axios.post('http://127.0.0.1:8080/post', formData);\r\n        console.log('Data sent successfully.', response.data);\r\n\r\n        this.resetForm();\r\n      } catch (error) {\r\n        console.error('Data sending error.', error);\r\n        this.formHasErrors = true;\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>"],"mappings":"AAwFA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAEA,CAAA,MAAO;IACXC,UAAU,EAAE,EAAE;IACdC,aAAa,EAAE,EAAE;IACjBC,IAAI,EAAE,IAAI;IACVC,QAAQ,EAAE,IAAI;IACdC,aAAa,EAAE;EACjB,CAAC,CAAC;EACFC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,eAAe,CAAC,CAAC;EACxB,CAAC;EACDC,QAAQ,EAAE;IACRC,IAAGA,CAAA,EAAK;MACN,OAAO;QACLN,IAAI,EAAE,IAAI,CAACA,IAAI;QACfC,QAAQ,EAAE,IAAI,CAACA;MACjB;IACF;EACF,CAAC;EACDM,OAAO,EAAE;IACPC,SAAQA,CAAA,EAAK;MACX,IAAI,CAACT,aAAY,GAAI,IAAI,CAACC,IAAG,GACtB,sBAAoB,GACrB,EAAC;MAEP,OAAO,IAAG;IACZ,CAAC;IACDS,SAAQA,CAAA,EAAK;MACX,IAAI,CAACV,aAAY,GAAI,EAAC;MACtB,IAAI,CAACG,aAAY,GAAI,KAAI;MAEzBQ,MAAM,CAACC,IAAI,CAAC,IAAI,CAACL,IAAI,CAAC,CAACM,OAAO,CAACC,CAAA,IAAK;QAClC,IAAI,CAACC,KAAK,CAACD,CAAC,CAAC,CAACE,KAAK,CAAC;MACtB,CAAC;IACH,CAAC;IACD,MAAMC,KAAKA,CAAA,EAAG;MACZ,MAAMC,QAAO,GAAI;QACfC,QAAQ,EAAE,IAAI,CAAClB,IAAI;QACnBmB,YAAY,EAAE,IAAI,CAAClB;MACrB,CAAC;MAED,IAAI;QACF,MAAMmB,QAAO,GAAI,MAAMxB,KAAK,CAACI,IAAI,CAAC,4BAA4B,EAAEiB,QAAQ,CAAC;QACzEI,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,QAAQ,CAACvB,IAAI,CAAC;QAErD,IAAI,CAACY,SAAS,CAAC,CAAC;MAClB,EAAE,OAAOc,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC3C,IAAI,CAACrB,aAAY,GAAI,IAAI;MAC3B;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      categories: [],\n      errorMessages: '',\n      post: null,\n      category: null,\n      formHasErrors: false\n    };\n  },\n  computed: {\n    form() {\n      return {\n        post: this.post,\n        category: this.category\n      };\n    }\n  },\n  async created() {\n    await this.fetchCategories();\n  },\n  methods: {\n    async fetchCategories() {\n      try {\n        const response = await axios.get('http://127.0.0.1:8080/categories');\n        this.categories = response.data.map(category => category.category_name);\n      } catch (error) {\n        console.error('An error occurred while fetching the categories.', error);\n      }\n    },\n    postCheck() {\n      this.errorMessages = this.post ? this.category ? '' : 'Hey! Select a category...' : 'Hey! Post is required...';\n      return this.post && this.category;\n    },\n    resetForm() {\n      this.errorMessages = '';\n      this.formHasErrors = false;\n      if (this.$refs.post) {\n        this.$refs.post.reset();\n      }\n      if (this.$refs.category) {\n        this.$refs.category.reset();\n        this.category = null;\n      }\n    },\n    async share() {\n      const formData = {\n        content: this.post,\n        category_name: this.category,\n        user_name: \"yigitataben\",\n        created_at: this.created_at\n      };\n      try {\n        const response = await axios.post('http://127.0.0.1:8080/post', formData);\n        console.log('Data sent successfully.', response.data);\n        this.resetForm();\n      } catch (error) {\n        console.error('Data sending error.', error);\n        this.formHasErrors = true;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","categories","errorMessages","post","category","formHasErrors","computed","form","created","fetchCategories","methods","response","get","map","category_name","error","console","postCheck","resetForm","$refs","reset","share","formData","content","user_name","created_at","log"],"sources":["C:\\Users\\yigit\\OneDrive\\Workspace\\opin.io\\client\\src\\views\\PostView.vue"],"sourcesContent":["<template>\r\n  <v-card\r\n      max-width=\"550\"\r\n      class=\"mx-auto\"\r\n      variant=\"flat\"\r\n      rounded=\"xl\"\r\n  >\r\n    <v-sheet class=\"pa-4 text-center\">\r\n      <v-autocomplete\r\n          chips\r\n          ref=\"category\"\r\n          placeholder=\"Please select a category...\"\r\n          v-model=\"category\"\r\n          :rules=\"[() => !!category]\"\r\n          :items=\"categories\"\r\n          required\r\n          variant=\"outlined\"\r\n          rounded=\"xl\"\r\n      ></v-autocomplete>\r\n\r\n      <v-textarea\r\n          variant=\"outlined\"\r\n          placeholder=\"Please fill the area...\"\r\n          auto-grow\r\n          full-width\r\n          rows=\"1\"\r\n          hide-details\r\n          rounded=\"xl\"\r\n          ref=\"post\"\r\n          v-model=\"post\"\r\n          :rules=\"[() => !!post, postCheck]\"\r\n          required\r\n      ></v-textarea>\r\n    </v-sheet>\r\n\r\n    <div class=\"d-flex justify-space-between pa-4 pb-0\">\r\n      <v-btn-toggle\r\n          variant=\"outlined\"\r\n          divided=\"true\"\r\n          rounded=\"xl\"\r\n      >\r\n        <v-btn>\r\n          <v-icon icon=\"mdi-image\"></v-icon>\r\n        </v-btn>\r\n\r\n        <v-btn>\r\n          <v-icon icon=\"mdi-gif\"></v-icon>\r\n        </v-btn>\r\n\r\n        <v-btn>\r\n          <v-icon icon=\"mdi-sticker-emoji\"></v-icon>\r\n        </v-btn>\r\n      </v-btn-toggle>\r\n\r\n      <v-btn-toggle\r\n          multiple=\"true\"\r\n          variant=\"outlined\"\r\n          divided=\"true\"\r\n          rounded=\"xl\"\r\n          justify=\"center\"\r\n      >\r\n        <v-btn>\r\n          <v-icon icon=\"mdi-format-italic\"></v-icon>\r\n        </v-btn>\r\n\r\n        <v-btn>\r\n          <v-icon icon=\"mdi-format-bold\"></v-icon>\r\n        </v-btn>\r\n\r\n        <v-btn>\r\n          <v-icon icon=\"mdi-format-underline\"></v-icon>\r\n        </v-btn>\r\n      </v-btn-toggle>\r\n\r\n      <v-btn-toggle\r\n          variant=\"outlined\"\r\n          rounded=\"xl\"\r\n          justify=\"center\"\r\n          color=\"success\"\r\n          @click=\"share\"\r\n      >\r\n        <v-btn>\r\n          <v-icon icon=\"mdi-share\"></v-icon>\r\n        </v-btn>\r\n      </v-btn-toggle>\r\n    </div>\r\n  </v-card>\r\n</template>\r\n<script>\r\n\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      categories: [],\r\n      errorMessages: '',\r\n      post: null,\r\n      category: null,\r\n      formHasErrors: false,\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    form() {\r\n      return {\r\n        post: this.post,\r\n        category: this.category,\r\n      };\r\n    },\r\n  },\r\n\r\n  async created() {\r\n    await this.fetchCategories();\r\n  },\r\n\r\n  methods: {\r\n    async fetchCategories() {\r\n      try {\r\n        const response = await axios.get('http://127.0.0.1:8080/categories');\r\n        this.categories = response.data.map(category => category.category_name);\r\n      } catch (error) {\r\n        console.error('An error occurred while fetching the categories.', error);\r\n      }\r\n    },\r\n\r\n    postCheck() {\r\n      this.errorMessages = this.post\r\n          ? (this.category ? '' : 'Hey! Select a category...')\r\n          : 'Hey! Post is required...';\r\n\r\n      return this.post && this.category;\r\n    },\r\n\r\n    resetForm() {\r\n      this.errorMessages = '';\r\n      this.formHasErrors = false;\r\n\r\n      if (this.$refs.post) {\r\n        this.$refs.post.reset();\r\n      }\r\n      if (this.$refs.category) {\r\n        this.$refs.category.reset();\r\n        this.category = null;\r\n      }\r\n    },\r\n\r\n\r\n    async share() {\r\n      const formData = {\r\n        content: this.post,\r\n        category_name: this.category,\r\n        user_name: \"yigitataben\",\r\n        created_at: this.created_at,\r\n      };\r\n\r\n      try {\r\n        const response = await axios.post('http://127.0.0.1:8080/post', formData);\r\n        console.log('Data sent successfully.', response.data);\r\n\r\n        this.resetForm();\r\n      } catch (error) {\r\n        console.error('Data sending error.', error);\r\n        this.formHasErrors = true;\r\n      }\r\n    },\r\n  },\r\n}\r\n</script>"],"mappings":"AA0FA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,EAAE;MACdC,aAAa,EAAE,EAAE;MACjBC,IAAI,EAAE,IAAI;MACVC,QAAQ,EAAE,IAAI;MACdC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EAEDC,QAAQ,EAAE;IACRC,IAAIA,CAAA,EAAG;MACL,OAAO;QACLJ,IAAI,EAAE,IAAI,CAACA,IAAI;QACfC,QAAQ,EAAE,IAAI,CAACA;MACjB,CAAC;IACH;EACF,CAAC;EAED,MAAMI,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,eAAe,CAAC,CAAC;EAC9B,CAAC;EAEDC,OAAO,EAAE;IACP,MAAMD,eAAeA,CAAA,EAAG;MACtB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMZ,KAAK,CAACa,GAAG,CAAC,kCAAkC,CAAC;QACpE,IAAI,CAACX,UAAS,GAAIU,QAAQ,CAACX,IAAI,CAACa,GAAG,CAACT,QAAO,IAAKA,QAAQ,CAACU,aAAa,CAAC;MACzE,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kDAAkD,EAAEA,KAAK,CAAC;MAC1E;IACF,CAAC;IAEDE,SAASA,CAAA,EAAG;MACV,IAAI,CAACf,aAAY,GAAI,IAAI,CAACC,IAAG,GACtB,IAAI,CAACC,QAAO,GAAI,EAAC,GAAI,2BAA2B,GACjD,0BAA0B;MAEhC,OAAO,IAAI,CAACD,IAAG,IAAK,IAAI,CAACC,QAAQ;IACnC,CAAC;IAEDc,SAASA,CAAA,EAAG;MACV,IAAI,CAAChB,aAAY,GAAI,EAAE;MACvB,IAAI,CAACG,aAAY,GAAI,KAAK;MAE1B,IAAI,IAAI,CAACc,KAAK,CAAChB,IAAI,EAAE;QACnB,IAAI,CAACgB,KAAK,CAAChB,IAAI,CAACiB,KAAK,CAAC,CAAC;MACzB;MACA,IAAI,IAAI,CAACD,KAAK,CAACf,QAAQ,EAAE;QACvB,IAAI,CAACe,KAAK,CAACf,QAAQ,CAACgB,KAAK,CAAC,CAAC;QAC3B,IAAI,CAAChB,QAAO,GAAI,IAAI;MACtB;IACF,CAAC;IAGD,MAAMiB,KAAKA,CAAA,EAAG;MACZ,MAAMC,QAAO,GAAI;QACfC,OAAO,EAAE,IAAI,CAACpB,IAAI;QAClBW,aAAa,EAAE,IAAI,CAACV,QAAQ;QAC5BoB,SAAS,EAAE,aAAa;QACxBC,UAAU,EAAE,IAAI,CAACA;MACnB,CAAC;MAED,IAAI;QACF,MAAMd,QAAO,GAAI,MAAMZ,KAAK,CAACI,IAAI,CAAC,4BAA4B,EAAEmB,QAAQ,CAAC;QACzEN,OAAO,CAACU,GAAG,CAAC,yBAAyB,EAAEf,QAAQ,CAACX,IAAI,CAAC;QAErD,IAAI,CAACkB,SAAS,CAAC,CAAC;MAClB,EAAE,OAAOH,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC3C,IAAI,CAACV,aAAY,GAAI,IAAI;MAC3B;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}